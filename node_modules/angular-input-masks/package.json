{
  "_from": "angular-input-masks",
  "_id": "angular-input-masks@4.4.1",
  "_inBundle": false,
  "_integrity": "sha512-gY1rhev/07EO82UU6H1ENdYdI2yzfYXIb04JOW9Un4pWXhQ7sfsLp/jx10D8QZs7qwEa3/vHU3RdHLhpBtkjYA==",
  "_location": "/angular-input-masks",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "angular-input-masks",
    "fetchSpec": "latest",
    "name": "angular-input-masks",
    "raw": "angular-input-masks",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/angular-input-masks/-/angular-input-masks-4.4.1.tgz",
  "_shasum": "bc43e76095699ff2853e04b14a17eea02f9916e4",
  "_spec": "angular-input-masks",
  "_where": "D:\\Projects\\Test\\Sch\\ng",
  "author": {
    "name": "igor.rafael@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/assisrafael/angular-input-masks/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "br-validations": "^0.3.1",
    "date-fns": "2.0.0-alpha.7",
    "string-mask": "^0.3.0"
  },
  "deprecated": false,
  "description": "Personalized input masks for AngularJS",
  "devDependencies": {
    "angular": "^1.7.8",
    "angular-i18n": "^1.7.8",
    "angular-mocks": "^1.7.8",
    "browserify": "^16.2.3",
    "browserify-istanbul": "^3.0.1",
    "eslint": "^5.16.0",
    "express": "^4.16.4",
    "gulp": "^4.0.2",
    "gulp-header": "^2.0.7",
    "gulp-load-plugins": "^1.5.0",
    "gulp-rename": "^1.4.0",
    "gulp-uglify": "^3.0.2",
    "istanbul": "^0.4.5",
    "jasmine-core": "^3.4.0",
    "jasmine-spec-reporter": "^4.2.1",
    "karma": "^4.1.0",
    "karma-browserify": "^6.0.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage": "^1.1.2",
    "karma-coveralls": "^2.1.0",
    "karma-jasmine": "^2.0.1",
    "merge-stream": "^1.0.0",
    "minimist": "^1.1.1",
    "protractor": "^5.4.2",
    "standard-version": "^6.0.1",
    "vinyl-buffer": "^1.0.0",
    "vinyl-source-stream": "^2.0.0",
    "webdriver-manager": "^12.1.4"
  },
  "files": [
    "src/",
    "releases/",
    "index.js",
    "br.js",
    "ch.js",
    "fr.js",
    "us.js",
    "LICENSE",
    "CHANGELOG.md",
    "README.md"
  ],
  "homepage": "http://github.com/assisrafael/angular-input-masks",
  "keywords": [
    "input",
    "mask",
    "angularjs"
  ],
  "license": "MIT",
  "name": "angular-input-masks",
  "optionalDependencies": {},
  "readme": "# angular-input-masks [![Build Status](https://travis-ci.org/assisrafael/angular-input-masks.svg?branch=master)](https://travis-ci.org/assisrafael/angular-input-masks) [![Coverage Status](https://coveralls.io/repos/assisrafael/angular-input-masks/badge.svg?branch=master)](https://coveralls.io/r/assisrafael/angular-input-masks?branch=master) [![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\n[![NPM](https://nodei.co/npm/angular-input-masks.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/angular-input-masks/)\n\n[![Join the chat at https://gitter.im/assisrafael/angular-input-masks](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/assisrafael/angular-input-masks?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Bountysource](https://www.bountysource.com/badge/team?team_id=60791&style=bounties_posted)](https://www.bountysource.com/teams/angular-input-masks/bounties?utm_source=angular-input-masks&utm_medium=shield&utm_campaign=bounties_posted)\n\nOpinionated angular input masks. Provides ready to use masks with little (br/inscricao-estadual) to no configuration (number, cnpj, etc).\n\n### Compatibility\n\n- angular-input-masks@~2: angular@^1.3 (however is only tested with lastest 1.x version) and [ECMAScript 5 compliant browsers](http://kangax.github.io/compat-table/es5/) (however CI only tests chrome and firefox).\n- angular-input-masks@~1: angular@~1.2\n\n\n## Installation\n\n```\nnpm install --save angular-input-masks\n```\n\n## Configuration\n\n### Without browserify:\n\n1. Import the ```angular-input-masks-standalone.min.js``` script in your page. For example:\n\n```\n<script src=\"angular-input-masks-standalone.min.js\"></script>\n```\n\nObs: for npm the build scripts are available inside ```releases``` folder.\n\n2. Include the module name ```ui.utils.masks``` in your angular app. For example:\n\n```\nangular.module('app', ['ui.utils.masks']);\n```\n\n### With browserify:\n\n```\nangular.module('demo', [require('angular-input-masks')]);\n```\n\n## Internationalization\n\nSome masks are internationalized, so you need to include the proper angular-locale in your app(see: https://docs.angularjs.org/guide/i18n).\n\n## How to use\n\n - Number mask Example :\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask>\n```\n\n- Define the number of decimals (default is 2):\n\n```html\n<input type=\"text\" name=\"field\" ng-model=\"number\" ui-number-mask=\"3\">\n```\n\n### More examples ###\n\n_See more usage examples in the [Demo page](http://assisrafael.github.io/angular-input-masks/)_\n\n\n## Other build options\n\nIf you are using npm (without browserify):\n\n- angular-input-masks-dependencies.js: provides all external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks-br.js: provides only global and BR directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks-us.js: provides only global and US directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks-fr.js: provides only global and FR directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n- angular-input-masks.js: provides all directives, and does not include external dependencies (string-mask, br-validations, momentjs)\n\nIf you are using npm with browserify:\n\n- ```require('angular-input-masks')```: provides all directives\n- ```require('angular-input-masks/br')```: only global and BR directives\n- ```require('angular-input-masks/us')```: only global and US directives\n- ```require('angular-input-masks/fr')```: only global and FR directives\n\n## Filters\n\nLooking for related filters? Take a look at [angular-br-filters](https://github.com/the-darc/angular-br-filters)\n\n## Build\n\n```\nnpm install\nnpm run build\n```\n\n### Tests\n\n- Unit:\n - Uses [Karma](http://karma-runner.github.io) + [Jasmine](http://jasmine.github.io/)\n - Files: `src/**/*.test.js`\n\n```\nnpm run test:unit\n```\n\n- e2e:\n - Uses [Protractor](https://github.com/angular/protractor) + Jasmine\n - Files: `src/**/*.spec.js`\n\n\n```\nnpm run test:e2e\n```\n\n- To run both tests:\n\n```\nnpm test\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/assisrafael/angular-input-masks.git"
  },
  "scripts": {
    "build": "gulp build",
    "ci": "npm run lint && npm run webdriver && npm run test",
    "demo": "gulp serve",
    "lint": "eslint *.js src/ config/ --fix",
    "prepare": "npm run build",
    "pretest:e2e": "npm run build",
    "release": "standard-version",
    "test": "npm run test:unit && npm run test:e2e",
    "test:e2e": "protractor config/protractor.conf.js",
    "test:unit": "karma start config/karma.conf.js --single-run",
    "test:unit:watch": "karma start config/karma.conf.js --auto-watch",
    "webdriver": "webdriver-manager update"
  },
  "version": "4.4.1"
}
